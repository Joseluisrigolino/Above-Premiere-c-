<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>